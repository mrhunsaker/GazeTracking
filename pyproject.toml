[tool.poetry]
name = "eye-gaze-analysis"
version = "2025.02.08"
authors = ["Michael Ryan Hunsaker <hunsakerconsulting@gmail.com>"]
description = "Data collection application for Teachers of Students with Visual Impairments"
maintainers = ["Michael Ryan Hunsaker, M.Ed., Ph.D. <hunsakerconsulting@gmail.com>"]
license = "Apache-2.0"
readme = "README.md"
packages = [{ include = "eye-gaze-analysis" }]
repository = "https://github.com/mrhunsaker/GAZEANALYSIS"
keywords = ["visual impairment", "education", "data collection"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Win32 (MS Windows)",
    "Framework :: FastAPI",
    "Intended Audience :: Education",
    "Intended Audience :: End Users/Desktop",
    "License :: Freely Distributable",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows :: Windows 11",
    "Programming Language :: Python :: 3.11",
    "Topic :: Education",
    "Topic :: Education :: Testing"
]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
numpy = "^2.2.2"
scipy = "^1.15.1"
matplotlib = "^3.10.0"
seaborn = "^0.13.2"
pandas = "^2.2.3"
argparse = "^1.4.0"
pathlib = "^1.0.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
pylint = ">=3.3.4"
black = ">=25.1.0"
ruff = ">=0.9.5"

[[tool.poetry.source]]
name = "student_skills_progression"
url = "https://github.com/mrhunsaker/StudentDataGUI"
priority = "primary"

[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[tool.pyanalyze]
missing_parameter_annotation = true
missing_return_annotation = true
incompatible_override = true

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "D"]
ignore = ["D417"]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
preview = true

[tool.ruff.format]
quote-style = "double"
line-ending = "native"
skip-magic-trailing-comma = false

[tool.ruff.lint.isort]
case-sensitive = true
combine-as-imports = true
force-single-line = true
force-wrap-aliases = true
lines-after-imports = 2
lines-between-types = 1
order-by-type = true
relative-imports-order = "closest-to-furthest"

[tool.ruff.lint.pycodestyle]
max-line-length = 120

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pylint]
max-branches = 25
max-public-methods = 25

[tool.ruff.lint.flake8-copyright]
author = "Michael Ryan Hunsaker, M.Ed., Ph.D."

[tool.ruff.lint.flake8-import-conventions]
[tool.ruff.lint.flake8-import-conventions.aliases]
altair = "alt"
"matplotlib.pyplot" = "plt"
numpy = "np"
pandas = "pd"
seaborn = "sns"
scipy = "sp"
"plotly.graph_objects" = "go"
tkinter = "tk"
"plotly.express" = "px"
polars = "pl"
pyarrow = "pa"
tensorflow = "tf"

[tool.ruff.lint.flake8-quotes]
avoid-escape = true
docstring-quotes = "double"
inline-quotes = "single"
multiline-quotes = "double"
